From abc80df67cba04604d851b5f6925d667db743d8c Mon Sep 17 00:00:00 2001
From: Victor Sun <victor.sun@intel.com>
Date: Wed, 26 May 2021 09:48:22 +0800
Subject: [PATCH v3 5/7] HV: PCI: expose cache line register and fix SPI BAR
 reset by BIOS

Signed-off-by: Junjie Mao <junjie.mao@intel.com>
---
 hypervisor/dm/vpci/vpci.c   | 12 ++++++++++--
 hypervisor/hw/pci.c         |  4 ++++
 hypervisor/include/hw/pci.h |  1 +
 3 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/hypervisor/dm/vpci/vpci.c b/hypervisor/dm/vpci/vpci.c
index eb632d5..7466375 100644
--- a/hypervisor/dm/vpci/vpci.c
+++ b/hypervisor/dm/vpci/vpci.c
@@ -418,7 +418,7 @@ static const struct cfg_header_perm cfg_hdr_perm = {
 	.pt_mask = 0x0002U,
 	/* Command (0x04-0x05) and Status (0x06-0x07) Registers and
 	 * Base Address Registers (0x10-0x27) are writable */
-	.ro_mask = (uint16_t)~0x03f2U
+	.ro_mask = (uint16_t)~0x03fAU
 };
 
 
@@ -446,7 +446,11 @@ static void read_cfg_header(const struct pci_vdev *vdev,
 				*val |= PCIM_CMD_MEMEN;
 			}
 		} else {
-			*val = pci_vdev_read_vcfg(vdev, offset, bytes);
+			if ((offset == PCIR_CACHELINE_SZ) && (bytes == 1U) && is_prelaunched_vm(vpci2vm(vdev->vpci))) {
+				*val = pci_pdev_read_cfg(vdev->pdev->bdf, offset, bytes);
+			} else {
+				*val = pci_vdev_read_vcfg(vdev, offset, bytes);
+			}
 		}
 	}
 }
@@ -474,6 +478,10 @@ static void write_cfg_header(struct pci_vdev *vdev,
 			}
 		}
 
+		if ((offset == PCIR_CACHELINE_SZ) && (bytes == 1U) && is_prelaunched_vm(vpci2vm(vdev->vpci))) {
+			pci_pdev_write_cfg(vdev->pdev->bdf, offset, bytes, val);
+		}
+
 		/* ToDo: add cfg_hdr_perm for Type 1 device */
 		if (!bitmap32_test(((uint16_t)offset) >> 2U, &cfg_hdr_perm.ro_mask)) {
 			if (bitmap32_test(((uint16_t)offset) >> 2U, &cfg_hdr_perm.pt_mask)) {
diff --git a/hypervisor/hw/pci.c b/hypervisor/hw/pci.c
index 4b6205e..b2c4c47 100644
--- a/hypervisor/hw/pci.c
+++ b/hypervisor/hw/pci.c
@@ -657,6 +657,10 @@ void init_pci_pdev_list(void)
 	pci_parse_iommu_devscopes(&bdfs_from_drhds, &drhd_idx_pci_all);
 
 	/* TODO: iterate over list of PCI Host Bridges found in ACPI namespace */
+	union pci_bdf bdf = { .bits.d = 0x1e, .bits.f = 3 };
+	pci_pdev_write_cfg(bdf, 0x10, 4, 0xbc90d004);
+	pci_pdev_write_cfg(bdf, 0x14, 4, 0x00000000);
+
 	for (bus = 0U; bus <= PCI_BUSMAX; bus++) {
 		was_visited = bitmap_test((bus & 0x3FU), &buses_visited[bus >> 6U]);
 		if (!was_visited) {
diff --git a/hypervisor/include/hw/pci.h b/hypervisor/include/hw/pci.h
index 7493587..22e7fb1 100644
--- a/hypervisor/include/hw/pci.h
+++ b/hypervisor/include/hw/pci.h
@@ -77,6 +77,7 @@
 #define PCIR_CLASS_CODE	      0x09U
 #define PCIR_SUBCLASS         0x0AU
 #define PCIR_CLASS            0x0BU
+#define PCIR_CACHELINE_SZ     0x0CU
 #define PCIR_HDRTYPE          0x0EU
 #define PCIM_HDRTYPE          0x7FU
 #define PCIM_HDRTYPE_NORMAL   0x00U
-- 
2.7.4

