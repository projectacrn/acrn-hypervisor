<?xml version="1.0"?>
<xs:schema xml:id="root"
	   xmlns:xs="http://www.w3.org/2001/XMLSchema"
	   xmlns:acrn="https://projectacrn.org">

<xs:simpleType name="Boolean">
  <xs:annotation>
    <xs:documentation>A Boolean value, written as ``y`` or ``n``.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="y" />
    <xs:enumeration value="n" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="EnablementType">
  <xs:restriction base="xs:string">
    <xs:enumeration value="Enable" />
    <xs:enumeration value="Disable" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="HexFormat">
  <xs:annotation>
    <xs:documentation>An Integer value in hexadecimal format.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:pattern value="0[Xx][0-9A-Fa-f]+|0" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="None">
  <xs:restriction base="xs:string">
    <xs:pattern value="[*]{0}" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="BuildType">
  <xs:annotation>
    <xs:documentation>A string that indicates the build type of the hypervisor.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="release" />
    <xs:enumeration value="debug" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="KernLoadAddr">
  <xs:annotation>
    <xs:documentation>Either empty, or an Integer value in hexadecimal format.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None HexFormat" />
</xs:simpleType>

<xs:simpleType name="KernEntryAddr">
  <xs:annotation>
    <xs:documentation>Either empty, or an Integer value in hexadecimal format.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None HexFormat" />
</xs:simpleType>

<xs:simpleType name="MaxMsixTableNumType">
  <xs:annotation>
    <xs:documentation>Integer from 1 to 2048.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1" />
    <xs:maxInclusive value="2048" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="MaxMsixTableSizeType">
  <xs:annotation>
    <xs:documentation>Either empty, or an Integer value between 1 and 2048.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None MaxMsixTableNumType" />
</xs:simpleType>

<xs:simpleType name="MemorySizeType">
  <xs:annotation>
    <xs:documentation>An Integer value in hexadecimal format.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="HexFormat" />
</xs:simpleType>

<xs:simpleType name="LogLevelType">
  <xs:annotation>
    <xs:documentation>An Integer from 0 to 7 representing log message
severity and intent:

- 0 no log at all
- 1 (LOG_FATAL) system is unusable
- 2 (LOG_ERROR) error conditions
- 3 (LOG_WARNING) warning conditions
- 4 (LOG_INFO) informational
- 5 (LOG_DEBUG) debug-level messages

A lower value has a higher severity. Log messages with a
higher value (lower severity) are discarded.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="0">
      <xs:annotation acrn:title="0: None" />
    </xs:enumeration>
    <xs:enumeration value="1">
      <xs:annotation acrn:title="1: Critical" />
    </xs:enumeration>
    <xs:enumeration value="2">
      <xs:annotation acrn:title="2: Error" />
    </xs:enumeration>
    <xs:enumeration value="3">
      <xs:annotation acrn:title="3: Warning" />
    </xs:enumeration>
    <xs:enumeration value="4">
      <xs:annotation acrn:title="4: Information" />
    </xs:enumeration>
    <xs:enumeration value="5">
      <xs:annotation acrn:title="5: Debug" />
    </xs:enumeration>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SchedulerType">
  <xs:annotation>
    <xs:documentation>Four scheduler options are supported:

- ``SCHED_NOOP``: The NOOP (No-Operation) scheduler means there is a
  strict 1 to 1 mapping between vCPUs and pCPUs.
- ``SCHED_IORR``: The IORR (IO sensitive Round Robin) scheduler supports
  multiple vCPUs running on one pCPU, scheduled by
  a IO sensitive round robin policy.
- ``SCHED_BVT``: The BVT (Borrowed Virtual Time) scheduler is a virtual time based
  scheduling algorithm, it dispatches the runnable thread with the
  earliest effective virtual time. *TODO: BVT scheduler will be built on
  top of a prioritized scheduling mechanism, i.e. higher priority threads
  get scheduled first, and same priority tasks are scheduled per BVT.*
- ``SCHED_PRIO``: The priority based scheduler. vCPU scheduling will be based on
  their pre-configured priorities.

Read more about the available scheduling options in :ref:`cpu_sharing`.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="SCHED_NOOP" />
    <xs:enumeration value="SCHED_IORR" />
    <xs:enumeration value="SCHED_BVT" />
    <xs:enumeration value="SCHED_PRIO" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="PriorityType">
  <xs:annotation>
    <xs:documentation>Two priorities are supported for priority based scheduler:

- ``PRIO_LOW``: low priority for vCPU scheduling.
- ``PRIO_HIGH``: high priority for vCPU scheduling.
    </xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="PRIO_LOW" />
    <xs:enumeration value="PRIO_HIGH" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SerialConsoleType">
  <xs:restriction base="xs:string">
    <xs:pattern value=".*ttyS[\d]+" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SerialConsoleOptions">
  <xs:annotation>
    <xs:documentation>Either empty or a string, such as ``/dev/ttyS0``.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None SerialConsoleType" />
</xs:simpleType>

<xs:simpleType name="VMNameType">
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-]){1,15}" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="VBDFType">
  <xs:restriction base="xs:string">
    <xs:pattern value="[0-9A-Fa-f]{1,2}:[0-1][0-9A-Fa-f].[0-7]" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ProviderType">
  <xs:restriction base="xs:string">
    <xs:enumeration value="Hypervisor" />
    <xs:enumeration value="Device Model" />
  </xs:restriction>
</xs:simpleType>

<xs:complexType name="IVSHMEMVM">
  <xs:sequence>
   <xs:element name="VM_NAME" type="VMNameType">
     <xs:annotation acrn:title="Shared VMS">
       <xs:documentation>Name of the VM which use this IVSHMEM.</xs:documentation>
     </xs:annotation>
   </xs:element>
   <xs:element name="VBDF" type = "VBDFType">
     <xs:annotation>
       <xs:documentation>Bus, Device and function of the virtual
device in VM . Set in hex.</xs:documentation>
     </xs:annotation>
   </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="IVSHMEMVMS">
  <xs:sequence>
   <xs:element name="IVSHMEM_VM" type="IVSHMEMVM" maxOccurs="unbounded">
     <xs:annotation>
       <xs:documentation>Set each VM which use this IVSHMEM.</xs:documentation>
     </xs:annotation>
   </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:simpleType name="IVSHMEMSize">
  <xs:restriction base="xs:integer">
    <xs:enumeration value="2" />
    <xs:enumeration value="4" />
    <xs:enumeration value="8" />
    <xs:enumeration value="16" />
    <xs:enumeration value="32" />
    <xs:enumeration value="64" />
    <xs:enumeration value="128" />
    <xs:enumeration value="256" />
    <xs:enumeration value="512" />
  </xs:restriction>
</xs:simpleType>

<xs:complexType name="IVSHMEMRegionType">
  <xs:all>
    <xs:element name="NAME">
      <xs:annotation acrn:title="Name">
        <xs:documentation>Name of the shared memory region.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
	<xs:restriction base="xs:string">
	  <xs:pattern value="\w+" />
	</xs:restriction>
      </xs:simpleType>
    </xs:element>
    <xs:element name="PROVIDED_BY" type="ProviderType" default="Hypervisor">
      <xs:annotation acrn:title="Emulated by">
        <xs:documentation>Whether the shared memory region is emulated by the hypervisor or Device Model.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="IVSHMEM_SIZE" type="IVSHMEMSize" default="2">
      <xs:annotation acrn:title="Size (MB)">
        <xs:documentation>Select the size of the shared memory region
in megabytes. The value should be a power of 2
and no more than 512.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="IVSHMEM_VMS" type="IVSHMEMVMS">
      <xs:annotation acrn:title="Shared VMs">
        <xs:documentation>Select all VMs that use the shared memory region.</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:all>
</xs:complexType>

<xs:complexType name="IVSHMEMInfo">
  <xs:sequence>
    <xs:element name="IVSHMEM_REGION" type="IVSHMEMRegionType" minOccurs="0" maxOccurs="unbounded">
      <xs:annotation>
        <xs:documentation>Set a inter-VM shared memory.</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="RDTType">
  <xs:sequence>
    <xs:element name="RDT_ENABLED" type="Boolean" default="n">
      <xs:annotation acrn:title="Intel Resource Director Technology">
        <xs:documentation>Enable the Intel Resource Director Technology (RDT)
allocation feature. If the board hardware does not support
RDT, setting this option to ``y`` is ignored.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="CDP_ENABLED" type="Boolean" default="n">
      <xs:annotation acrn:title="Code and Data Prioritization">
        <xs:documentation>Enable Code and Data Prioritization (CDP). CDP provides control over code and data placement in cache to improve an application's real-time performance.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="VCAT_ENABLED" type="Boolean" default="n">
      <xs:annotation>
        <xs:documentation>Enable virtualization of the Cache Allocation Technology (CAT) feature in RDT. CAT enables you to allocate cache to VMs, providing isolation to avoid performance interference from other VMs.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="CLOS_MASK" type="xs:string"  minOccurs="0" maxOccurs="unbounded">
      <xs:annotation>
        <xs:documentation>Specify the cache capacity bitmask for the CLOS; only continuous '1' bits
are allowed. The value will be ignored when hardware does not support RDT.
This option takes effect only if :option:`hv.FEATURES.RDT.RDT_ENABLED` is set to ``y``.
As :option:`vm.clos.vcpu_clos` specifies the index of the CLOS to be associated with the given vCPU,
:option:`hv.FEATURES.RDT.CLOS_MASK` of that CLOS would impact the performance of the given vCPU.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="MBA_DELAY" type="xs:string" minOccurs="0"  maxOccurs="unbounded">
      <xs:annotation>
        <xs:documentation>Memory Bandwidth Allocation delay value.</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="SSRAMInfo">
  <xs:sequence>
    <xs:element name="SSRAM_ENABLED" type="Boolean" default="n">
      <xs:annotation acrn:title="Software SRAM (for real-time apps)">
        <xs:documentation>Enable Software SRAM. This feature reserves memory buffers as always-cached memory to improve an application's real-time performance.</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:sequence>
</xs:complexType>

</xs:schema>
