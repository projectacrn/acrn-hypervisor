<?xml version="1.0"?>
<xs:schema xml:id="root" xmlns:xs="http://www.w3.org/2001/XMLSchema">

<xs:simpleType name="Boolean">
  <xs:annotation>
    <xs:documentation>A boolean value, written as ``y`` or ``n``.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="y" />
    <xs:enumeration value="n" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="HexFormat">
  <xs:annotation>
    <xs:documentation>An integer value in hexadecimal format.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:pattern value="0[Xx][0-9A-Fa-f]+|0" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="None">
  <xs:restriction base="xs:string">
    <xs:pattern value="[*]{0}" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="HVRamSizeType">
  <xs:annotation>
    <xs:documentation>Either empty, or a hexadecimal value.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None HexFormat" />
</xs:simpleType>

<xs:simpleType name="HVRamStartType">
  <xs:annotation>
    <xs:documentation>Either empty, or a hexadecimal value.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None HexFormat" />
</xs:simpleType>

<xs:simpleType name="MaxMsixTableNumType">
  <xs:annotation>
    <xs:documentation>Integer from 1 to 2048.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="1" />
    <xs:maxInclusive value="2048" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="MaxMsixTableSizeType">
  <xs:annotation>
    <xs:documentation>Either empty, or an integer value between 1 and 2048.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None MaxMsixTableNumType" />
</xs:simpleType>

<xs:simpleType name="SOSRamSize">
  <xs:restriction base="xs:string">
    <xs:enumeration value="CONFIG_SOS_RAM_SIZE" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="MemorySizeType">
  <xs:annotation>
    <xs:documentation>Either a hexadecimal value or the string
``CONFIG_SOS_RAM_SIZE``.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="SOSRamSize HexFormat" />
</xs:simpleType>

<xs:simpleType name="LogLevelType">
  <xs:annotation>
    <xs:documentation>An integer from 0 to 7 representing log message
severity and intent:

- 1 (LOG_FATAL) system is unusable
- 2 (LOG_ACRN)
- 3 (LOG_ERROR) error conditions
- 4 (LOG_WARNING) warning conditions
- 5 (LOG_INFO) informational
- 6 (LOG_DEBUG) debug-level messages

Note that lower values have a higher severity. Only log messages with a
severity level higher (lower value) than a specified value will be
recorded.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="0" />
    <xs:maxInclusive value="7" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SchedulerType">
  <xs:annotation>
    <xs:documentation>Three scheduler options are supported:

- ``SCHED_NOOP``: The NOOP (No-Operation) scheduler means there is a
  strict 1 to 1 mapping between vCPUs and pCPUs.
- ``SCHED_IORR``: The IORR (IO sensitive Round Robin) scheduler supports
  multiple vCPUs running on one pCPU, scheduled by
  a IO sensitive round robin policy.
- ``SCHED_BVT``: The BVT (Borrowed Virtual Time) scheduler is a virtual time based
  scheduling algorithm, it dispatches the runnable thread with the
  earliest effective virtual time. *TODO: BVT scheduler will be built on
  top of a prioritized scheduling mechanism, i.e. higher priority threads
  get scheduled first, and same priority tasks are scheduled per BVT.*

Read more about the available scheduling options in :ref:`cpu_sharing`.</xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
    <xs:enumeration value="SCHED_NOOP" />
    <xs:enumeration value="SCHED_IORR" />
    <xs:enumeration value="SCHED_BVT" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SerialConsoleType">
  <xs:restriction base="xs:string">
    <xs:pattern value=".*ttyS[0-3]" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="SerialConsoleOptions">
  <xs:annotation>
    <xs:documentation>Either empty or a string.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None SerialConsoleType" />
</xs:simpleType>

<xs:simpleType name="IVSHMEMRegionPattern">
  <xs:restriction base="xs:string">
    <xs:pattern value="hv:/\w+,\s?\d,\s?\s?\d:\s?\d\s?" />
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="IVSHMEMRegionType">
  <xs:annotation>
    <xs:documentation>Either empty or a string.</xs:documentation>
  </xs:annotation>
  <xs:union memberTypes="None IVSHMEMRegionPattern" />

</xs:simpleType>

<xs:complexType name="IVSHMEMInfo">
  <xs:sequence>
   <xs:element name="IVSHMEM_ENABLED" type="Boolean" default="n">
     <xs:annotation>
       <xs:documentation>Enable inter-VM shared memory (IVSHMEM) feature.</xs:documentation>
     </xs:annotation>
   </xs:element>
   <xs:element name="IVSHMEM_REGION" type="IVSHMEMRegionType">
     <xs:annotation>
       <xs:documentation>A comma-separated list with the inter-VM shared memory region name,
size, and VM IDs that may communicate using this shared region:

* Prefix the region ``name`` with ``hv:/`` (for an hv-land solution).
  (See :ref:`ivshmem-hld` for details.)
* Specify the region ``size`` in MB.  Must be a power of 2, e.g., 2, 4,
  8, 16, up to 512.
* Specify all VM IDs that may use this shared memory area,
  separated by a ``:``. For example, use ``0:2`` to share this area between
  VMs 0 and 2, or ``0:1:2`` (to let VMs 0, 1, and 2 share this area).</xs:documentation>
     </xs:annotation>
   </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="RDTType">
  <xs:sequence>
    <xs:element name="RDT_ENABLED" type="Boolean" default="n">
      <xs:annotation>
        <xs:documentation>Enable the Intel Resource Director Technology (RDT)
allocation feature. If the board hardware does not support
RDT, setting this option to ``y`` is ignored.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="CDP_ENABLED" type="Boolean" default="n">
      <xs:annotation>
        <xs:documentation>Specify whether to enable Code and Data Prioritization (CDP).
CDP is an extension of CAT. Set to 'y' to enable the feature or 'n' to disable it.
The 'y' will be ignored when hardware does not support CDP.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="CLOS_MASK" type="xs:string"  minOccurs="0" maxOccurs="unbounded">
      <xs:annotation>
        <xs:documentation>Specify the cache capacity bitmask for the CLOS; only continuous '1' bits
are allowed. The value will be ignored when hardware does not support RDT.</xs:documentation>
      </xs:annotation>
    </xs:element>
    <xs:element name="MBA_DELAY" type="xs:string" minOccurs="0">
      <xs:annotation>
        <xs:documentation>Memory Bandwidth Allocation delay value.</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="PSRAMInfo">
  <xs:sequence>
    <xs:element name="PSRAM_ENABLED" type="Boolean" default="n">
      <xs:annotation>
        <xs:documentation>Enable PTCM (Platform Tuning Configuration Manager).</xs:documentation>
      </xs:annotation>
    </xs:element>
  </xs:sequence>
</xs:complexType>

</xs:schema>
