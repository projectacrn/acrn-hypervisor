<acrn-config board="" scenario="">
  <vm id="0">
    <vm_type desc="Specify the VM by its load order: PRE_LAUNCHED_VM, SOS_VM or POST_LAUNCHED_VM." readonly="true">SOS_VM</vm_type>
    <name desc="Specify the VM name which will be shown in hypervisor console command: vm_list."></name>
    <guest_flags desc="Select all applicable flags for the VM" multiselect="true">
        <guest_flag></guest_flag>
    </guest_flags>
    <cpu_affinity desc="List of pCPU that this VM's vCPUs are pinned to.">
        <pcpu_id></pcpu_id>
    </cpu_affinity>
    <clos configurable="0" desc="Class of Service for Cache Allocation Technology. Please refer SDM 17.19.2 for details and use with caution.">
        <vcpu_clos>0</vcpu_clos>
    </clos>
    <memory>
        <start_hpa configurable="0" desc="The start physical address in host for the VM">0</start_hpa>
        <size configurable="0" desc="The memory size in Bytes for the VM">0x20000000</size>
    </memory>
    <os_config>
        <name desc="Specify the OS name of VM, currently it is not referenced by hypervisor code."></name>
        <kern_type desc="Specify the VM name which will be shown in hypervisor console command: vm_list."></kern_type>
        <kern_mod desc="The tag for kernel image which act as multiboot module, it must exactly match the module tag in GRUB multiboot cmdline."></kern_mod>
        <ramdisk_mod desc="The tag for ramdisk image which act as multiboot module, it must exactly match the module tag in GRUB multiboot cmdline."></ramdisk_mod>
        <bootargs configurable="0" desc="Specify kernel boot arguments">SOS_VM_BOOTARGS</bootargs>
    </os_config>
    <vuart id="0">
        <type configurable="0" desc="vCOM1 type">VUART_LEGACY_PIO</type>
        <base desc="vUART0 (A.K.A COM1) enabling switch. Enable by exposing its base address, disable by returning invalid base address." readonly="true">SOS_COM1_BASE</base>
        <irq configurable="0" desc="vCOM1 irq">SOS_COM1_IRQ</irq>
    </vuart>
    <vuart id="1">
        <type configurable="0" desc="vCOM2 type">VUART_LEGACY_PIO</type>
        <base desc="vUART1 (A.K.A COM2) enabling switch. Enable by exposing its base address, disable by returning invalid base address.">INVALID_COM_BASE</base>
        <irq configurable="0" desc="vCOM2 irq">SOS_COM2_IRQ</irq>
        <target_vm_id desc="COM2 is used for VM communications. When it is enabled, please specify which target VM that current VM connect to.">2</target_vm_id>
        <target_uart_id configurable="0" desc="target vUART ID that vCOM2 connect to">1</target_uart_id>
    </vuart>
    <pci_devs configurable="0" desc="pci devices list">
        <pci_dev desc="pci device"></pci_dev>
    </pci_devs>
    <board_private>
        <rootfs desc="rootfs for Linux kernel"></rootfs>
        <bootargs desc="Specify kernel boot arguments"></bootargs>
    </board_private>
  </vm>
</acrn-config>
